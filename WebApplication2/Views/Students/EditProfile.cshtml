@model WebApplication2.Models.StudentUpdateModel

@{
    ViewBag.Title = "Update Profile";
}


<div class="container fill img-rounded">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10 personal-info">
            <h1 class="h1over">@Resources.updateprofile</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <!-- left column -->
        <div class="col-md-1"></div>
        <div class="col-md-3">
            <div class="text-center">
                <img src="@Model.ProfileImage" class="avatar img-circle" id="profImg" alt="avatar" width="200" height="200">
                <h6>@Resources.uploadphote</h6>

                <input type="file" id="FileUpload" class="form-control" accept="image/*">

            </div>
        </div>

        <!-- edit form column -->
        <div class="col-md-8 personal-info">
            <div class="alert alert-info alert-dismissable" style="display: none;" id="alerts">
                <a class="panel-close close" data-dismiss="alert">×</a>
                <i class="fa fa-coffee"></i>
                @Resources.updatesuccess
            </div>
            <h3>@Resources.PersonalInfo</h3>
            @using (Ajax.BeginForm("EditProfile", "Student", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "showMessage" }, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.ProfileImage, new { htmlAttributes = new { style = "display: none;" } })

                <div class="form-group">
                    <label class="col-lg-3 control-label">@Html.LabelFor(model => model.FirstName)</label>
                    <div class="col-lg-6">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 control-label">@Html.LabelFor(model => model.LastName)</label>
                    <div class="col-lg-6">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 control-label">@Html.LabelFor(model => model.DateOfBirth)</label>

                    <div class="col-lg-3 input-group date" style="padding-left:15px" id='datetimepicker1'>
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-3 control-label">@Html.LabelFor(model => model.Country)</label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">@Html.LabelFor(model => model.City)</label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">@Html.LabelFor(model => model.University)</label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 control-label">@Html.LabelFor(model => model.Degree)</label>
                    <div class="col-lg-6">
                        @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="col-md-3 control-label"></label>
                    <div class="col-md-6">
                        <input type="submit" class="btn btn-success" value="@Resources.SaveChages">

                    </div>
                </div>
            }


        </div>
    </div>
</div>

@section scripts{

    <script>

        function showMessage() {

            $('html, body').animate({ scrollTop: 0 }, 'slow', function () {

            });


            $("#alerts").show();
            window.setTimeout(function () {
                $("#alerts").fadeTo(800, 0).slideUp(800, function () {
                    $(this).remove();
                });
            }, 5000);

        }

        $(document).ready(function () {


            $("#FileUpload").change(function () {
                var formData = new FormData();
                var totalFiles = document.getElementById("FileUpload").files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("FileUpload").files[i];

                    formData.append("FileUpload", file);
                }
                $.ajax({
                    type: "POST",
                    url: '/Students/UploadProfile',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#profImg").attr("src", response.result);
                        $("#ProfileImage").val(response.result);
                    },
                    error: function (error) {
                        alert("errror uploading profile");
                    }
                });
            });
        });

    </script>

}
